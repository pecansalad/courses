{"version":3,"sources":["types.ts","HomePage.tsx","View.tsx","utils.ts","SemesterView.tsx","SchoolView.tsx","Course.tsx","SubjectCourseList.tsx","MajorRequirements.tsx","SubjectView.tsx","Section.tsx","SectionsList.tsx","CourseView.tsx","MainPage.tsx","MobileMainPage.tsx","App.tsx","serviceWorker.ts","index.tsx","constants.ts","duck.ts"],"names":["LoadingState","Op","styles","HomePage","display","flexDirection","height","alignItems","justifyContent","lineHeight","season","backgroundColor","width","borderRadius","textDecoration","color","margin","seasonName","position","left","zIndex","seasons","css","fontSize","to","padding","overflow","boxShadow","paddingBottom","View","children","getOrKey","key","obj","fixCourseName","name","weirdCourseNames","replace","fixSubjectName","code","lessWeirdName","weirdSubjectNames","match","internationalSubjects","coreClasses","Set","SemesterView","year","dispatch","useDispatch","loadingState","useSelector","state","core","schools","error","useEffect","getSchools","Object","entries","entities","undergradSchools","filter","gradSchools","Loading","toString","map","school","SchoolView","schoolCode","shouldDisplayBack","subjects","getSubjects","undefined","Failed","console","log","sort","a","b","localeCompare","subject","Course","isOdd","active","transition","maxWidth","id","minWidth","subjectCode","deptCourseId","handleClick","isCoreReq","has","toLowerCase","findCoreReqs","onClick","SubjectCourseList","useState","activeCourse","setActiveCourse","getCourses","courses","subjectCourses","parseInt","i","course","reqBlock","MajorRequirements","requirements","stringToCourse","str","split","displayRequirements","req","argsComponents","args","flatMap","arg","op","And","Or","Choose","num","SubjectView","majorReqsKey","getStatusColor","status","Section","row","flexWrap","wordWrap","paddingLeft","type","instructors","meetings","location","minUnits","maxUnits","meetingDateTimes","meetingDays","meetingTimes","forEach","m","dateTime","moment","utc","beginDate","push","format","endTime","clone","add","minutesDuration","join","fixCredit","fixLocation","time","SectionsList","sections","displayDescription","displayNotes","section","registrationNumber","recitations","description","notes","CourseView","courseCode","allDescriptionsEqual","every","allNotesEqual","MainPage","useParams","views","MobileMainPage","history","useHistory","view","App","content","useWindowWidth","exact","path","Boolean","window","hostname","require","default","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","API_URL","TrendingMentalHealth","ICINE","IFMTV","IPHTI","ITHEA","ISPEC","sp","fa","initialEntity","initialState","coreSlice","createSlice","reducers","getSchoolsSuccess","action","Success","payload","getSchoolsFailure","getSubjectsPending","getSubjectsSuccess","getSubjectsFailure","getCoursesPending","getCoursesSuccess","getCoursesFailure","startLoading","finishLoading","actions","getState","async","length","fetch","res","json","requestPayload","rootReducer","combineReducers","reducer","configureStore"],"mappings":"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","file":"static/js/main.108be44f.chunk.js","sourcesContent":["export interface ISection {\n  registrationNumber: number;\n  sectionCode: string;\n  instructors: Array<string>;\n  type: string;\n  status: string;\n  meetings: Array<IMeeting>;\n  recitations: Array<ISection> | null;\n  location: string;\n  description: string;\n  name: string;\n  notes: string;\n  minUnits: number;\n  maxUnits: number;\n}\n\nexport interface IMeeting {\n  beginDate: Date;\n  minutesDuration: number;\n  endDate: Date;\n}\n\nexport interface ICourse {\n  name: string;\n  deptCourseId: string;\n  subjectCode: { code: string; school: string };\n  sections: Array<ISection>;\n}\n\nexport enum LoadingState {\n  Loading,\n  Success,\n  Failed\n}\n\nexport enum Op {\n  Or,\n  And,\n  Choose\n}\n\nexport type IRequirement =\n  | {\n      op: Op.And | Op.Or;\n      args: Array<IRequirement | string>;\n    }\n  | {\n      op: Op.Choose;\n      num: number;\n      args: Array<IRequirement | string>;\n    };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  HomePage: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"90vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    lineHeight: \"1.5em\"\n  },\n  season: (backgroundColor: string) => ({\n    width: \"200px\",\n    height: \"150px\",\n    borderRadius: \"15%\",\n    backgroundColor,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textDecoration: \"none\",\n    color: \"black\",\n    margin: \"20px\"\n  }),\n  seasonName: {\n    position: \"absolute\",\n    left: \"-50px\",\n    height: \"80vh\",\n    width: \"200px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    zIndex: 100\n  },\n  seasons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  }\n} as const;\n\nconst HomePage: React.FC = () => {\n  return (\n    <div css={styles.HomePage}>\n      <div css={{ fontSize: \"1.5em\" }}>\n        <h1> Courses </h1>\n      </div>\n      <div css={styles.seasons}>\n        <Link to=\"/2021/sp\" css={styles.season(\"#809848\")}>\n          <h2 css={{ fontSize: \"2.2em\" }}> Spring 21 </h2>\n        </Link>\n        <Link to=\"/2020/fa\" css={styles.season(\"#e08e45\")}>\n          <h2 css={{ fontSize: \"2.2em\" }}> Fall 20</h2>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\n\nconst styles = {\n  width: \"40vw\",\n  padding: \"20px\",\n  height: \"80vh\",\n  margin: \"20px\",\n  overflow: \"scroll\",\n  boxShadow: \"0px 4px 22px -6px rgba(0,0,0,0.75)\",\n  \"@media(max-width: 700px)\": {\n    width: \"80vw\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n    margin: \"0px\",\n    paddingBottom: \"20px\"\n  }\n};\n\nconst View: React.FC = ({ children }) => {\n  return <div css={styles}>{children}</div>;\n};\n\nexport default View;\n","import {\n  internationalSubjects,\n  weirdCourseNames,\n  weirdSubjectNames\n} from \"./constants\";\n\nexport function getOrKey(key: string, obj: { [s: string]: string }): string {\n  if (key in obj) {\n    return obj[key];\n  }\n  return key;\n}\n\nexport const delay = (time: number) =>\n  new Promise(resolve => setTimeout(resolve, time));\n\nexport function fixCredit(minUnits: number, maxUnits: number): string {\n  if (minUnits > 0) {\n    return `${minUnits} - ${maxUnits}`;\n  }\n  return `${maxUnits}`;\n}\n\nexport function fixLocation(location: string): string {\n  return location\n    .replace(\"Room:\", \"Room: \")\n    .replace(\"Bldg:COLU\", \"Columbia University\");\n}\n\nexport function fixCourseName(name: string): string {\n  return getOrKey(name, weirdCourseNames)\n    .replace(\"Sp Tpcs\", \"Special Topics\")\n    .replace(/Adolesc( |$)/, \"Adolescent \")\n    .replace(/Adv( |$)/, \"Advanced \")\n    .replace(/Intens( |$)/, \"Intense \")\n    .replace(\"Tpcs\", \"Topics\")\n    .replace(/Prob[ $:]/, \"Probability\")\n    .replace(/:$/, \"\");\n}\n\nexport function fixSubjectName(name: string, code: string): string {\n  const lessWeirdName = getOrKey(name, weirdSubjectNames).replace(\n    \"Ctr\",\n    \"Center\"\n  );\n  if (lessWeirdName.match(/Int[`']l/)) {\n    return code in internationalSubjects\n      ? internationalSubjects[code]\n      : \"International Programs\";\n  }\n  return lessWeirdName;\n}\n\nexport const getRandomInteger = (max: number): number => {\n  return Math.floor(Math.random() * max);\n};\n\nconst coreClasses = new Set([\n  \"csci-ua-101\",\n  \"csci-ua-102\",\n  \"csci-ua-201\",\n  \"csci-ua-202\",\n  \"csci-ua-310\",\n  \"math-ua-120\",\n  \"math-ua-121\",\n  \"math-ua-122\",\n  \"math-ua-123\",\n  \"math-ua-140\",\n  \"math-ua-325\",\n  \"math-ua-343\",\n  \"ds-ua-111\",\n  \"ds-ua-112\",\n  \"ds-ua-201\",\n  \"ds-ua-202\",\n  \"ds-ua-301\"\n]);\n\nexport function findCoreReqs(\n  schoolCode: string,\n  subjectCode: string,\n  deptCourseId: string\n): boolean {\n  return coreClasses.has(\n    `${subjectCode.toLowerCase()}-${schoolCode.toLowerCase()}-${deptCourseId}`\n  );\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Link } from \"react-router-dom\";\nimport { getSchools, RootState } from \"./duck\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport View from \"./View\";\nimport { getOrKey } from \"./utils\";\nimport { seasons } from \"./constants\";\nimport { LoadingState } from \"./types\";\n\ninterface Props {\n  year: string;\n  season: string;\n}\n\nconst SemesterView: React.FC<Props> = ({ year, season }) => {\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state: RootState) => state.core.schools.loadingState\n  );\n  const error = useSelector((state: RootState) => state.core.schools.error);\n  useEffect(() => {\n    dispatch(getSchools());\n  }, [dispatch]);\n  const schools = Object.entries(\n    useSelector((state: RootState) => state.core.schools.entities)\n  );\n  const undergradSchools = schools.filter(([code]) => code[0] !== \"G\");\n  const gradSchools = schools.filter(([code]) => code[0] === \"G\");\n\n  if (loadingState === LoadingState.Loading) {\n    return (\n      <View>\n        {\" \"}\n        <h2> Loading...</h2>\n      </View>\n    );\n  }\n  if (error) {\n    return (\n      <View>\n        <h1> {`${year} ${getOrKey(season, seasons)}`}</h1>\n        <div css={{ color: \"red\" }}> {error.toString()}</div>\n      </View>\n    );\n  }\n  return (\n    <View>\n      <div\n        css={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Link css={{ padding: \"5px\" }} to=\"/\">\n          {\" \"}\n          &#8592; Switch semester\n        </Link>\n        <Link\n          css={{ padding: \"5px\", textDecoration: \"none\" }}\n          to={`/${year}/${season}/search`}\n        >\n          <h2> Search</h2>\n        </Link>\n      </div>\n      <h3> Undergraduate </h3>\n      <ul\n        css={{ display: \"flex\", flexDirection: \"column\", lineHeight: \"1.5em\" }}\n      >\n        {undergradSchools.map(([code, school]) => (\n          <Link key={code} to={`/${year}/${season}/${code}`}>\n            {school.name}\n          </Link>\n        ))}\n      </ul>\n      <h3> Graduate </h3>\n      <ul\n        css={{ display: \"flex\", flexDirection: \"column\", lineHeight: \"1.5em\" }}\n      >\n        {gradSchools.map(([code, school]) => (\n          <Link key={code} to={`/${year}/${season}/${code}`}>\n            {school.name}\n          </Link>\n        ))}\n      </ul>\n    </View>\n  );\n};\n\nexport default SemesterView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSchools, getSubjects, RootState } from \"./duck\";\nimport View from \"./View\";\nimport { Link } from \"react-router-dom\";\nimport { LoadingState } from \"./types\";\nimport { fixSubjectName } from \"./utils\";\n\ninterface Props {\n  schoolCode: string;\n  year: string;\n  season: string;\n  shouldDisplayBack: boolean;\n}\n\nconst SchoolView: React.FC<Props> = ({\n  schoolCode,\n  year,\n  season,\n  shouldDisplayBack\n}) => {\n  const schools = useSelector(\n    (state: RootState) => state.core.schools.entities\n  );\n  const school = schools[schoolCode];\n  const dispatch = useDispatch();\n  const loadingState = useSelector(\n    (state: RootState) => state.core.subjects.loadingState\n  );\n  useEffect(() => {\n    dispatch(getSchools());\n    dispatch(getSubjects(schoolCode));\n  }, [dispatch, schoolCode]);\n  const error = useSelector((state: RootState) => state.core.subjects.error);\n  const subjects = useSelector(\n    (state: RootState) => state.core.subjects.entities[schoolCode]\n  );\n  if (subjects === undefined) {\n    return (\n      <View>\n        <h2> Loading...</h2>\n      </View>\n    );\n  }\n  if (loadingState === LoadingState.Failed) {\n    return <div css={{ color: \"red\" }}> {error} </div>;\n  }\n  console.log(school);\n  return (\n    <View>\n      <h2> {school?.name || schoolCode}</h2>\n      {shouldDisplayBack && (\n        <Link to={`/${year}/${season}`}> &#8592; Switch school</Link>\n      )}\n      <h3> Subjects </h3>\n      <ul\n        css={{ display: \"flex\", flexDirection: \"column\", lineHeight: \"1.5em\" }}\n      >\n        {Object.entries(subjects)\n          .sort((a, b) => a[0].localeCompare(b[0]))\n          .map(([code, subject]) => (\n            <Link\n              css={{\n                padding: \"10px\",\n                fontSize: \"1.2em\",\n                textDecoration: \"none\",\n                backgroundColor: \"#fefefe\",\n                width: \"30vw\",\n                \"@media(max-width: 700px)\": {\n                  width: \"50vw\"\n                },\n                \"&:nth-of-type(odd)\": {\n                  backgroundColor: \"#dfdfdf\"\n                }\n              }}\n              key={code}\n              to={`/${year}/${season}/${schoolCode}/${code}`}\n            >\n              {fixSubjectName(subject.name, code)}\n            </Link>\n          ))}\n      </ul>\n    </View>\n  );\n};\n\nexport default SchoolView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport React, { MouseEvent } from \"react\";\nimport { findCoreReqs, fixCourseName } from \"./utils\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  active?: boolean;\n  schoolCode: string;\n  subjectCode: string;\n  name: string;\n  deptCourseId: string;\n  year: string;\n  season: string;\n  isOdd: boolean;\n  handleClick?: (e: MouseEvent<HTMLAnchorElement>) => void;\n}\n\nconst styles = {\n  Course: (isOdd: boolean, active?: boolean) => {\n    let backgroundColor = isOdd ? \"#dfdfdf\" : \"#fefefe\";\n    if (active) {\n      backgroundColor = \"rgba(137,0,225,0.45)\";\n    }\n    return {\n      fontSize: \"1.2rem\",\n      display: \"flex\",\n      backgroundColor,\n      padding: \"10px\",\n      transition: \"0.1s background-color\",\n      textDecoration: \"none\",\n      color: \"black\",\n      \"@media(max-width: 1000px)\": {\n        maxWidth: \"70vw\"\n      },\n      \"&:hover\": {\n        backgroundColor: \"rgba(137,0,225,0.45)\"\n      }\n    };\n  },\n  id: {\n    width: \"10%\",\n    minWidth: \"50px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  core: {\n    color: \"red\"\n  },\n  name: {\n    width: \"70%\"\n  }\n} as const;\n\nconst Course: React.FC<Props> = ({\n  active,\n  schoolCode,\n  subjectCode,\n  name,\n  deptCourseId,\n  year,\n  season,\n  isOdd,\n  handleClick\n}) => {\n  const isCoreReq = findCoreReqs(schoolCode, subjectCode, deptCourseId);\n  return (\n    <Link\n      to={`/${year}/${season}/${schoolCode}/${subjectCode}/${deptCourseId}`}\n      onClick={handleClick}\n      key={name}\n      css={styles.Course(isOdd, active)}\n    >\n      <div css={styles.id}>{deptCourseId}</div>\n      <div css={styles.name}>{fixCourseName(name)}</div>\n      {isCoreReq && <div css={styles.core}> Major Req </div>}\n    </Link>\n  );\n};\n\nexport default Course;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { LoadingState } from \"./types\";\nimport Course from \"./Course\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCourses, RootState } from \"./duck\";\n\ninterface Props {\n  subjectCode: string;\n  schoolCode: string;\n  year: string;\n  season: string;\n}\n\nexport const SubjectCourseList: React.FC<Props> = ({\n  subjectCode,\n  schoolCode,\n  year,\n  season\n}) => {\n  const dispatch = useDispatch();\n  const [activeCourse, setActiveCourse] = useState<string | undefined>(\n    undefined\n  );\n  useEffect(() => {\n    dispatch(getCourses(year, season, schoolCode, subjectCode));\n  }, [subjectCode, schoolCode, season, year, dispatch]);\n  const loadingState = useSelector(\n    (state: RootState) => state.core.courses.loadingState\n  );\n  const courses = useSelector(\n    (state: RootState) =>\n      state.core.courses.entities[\n        `${year}-${season}-${subjectCode}-${schoolCode}`\n      ]\n  );\n  const error = useSelector((state: RootState) => state.core.courses.error);\n  if (loadingState === LoadingState.Loading || courses === undefined) {\n    return <h2> Loading...</h2>;\n  }\n  if (loadingState === LoadingState.Failed) {\n    return <div css={{ color: \"red\" }}> {error} </div>;\n  }\n  const subjectCourses = Object.entries(courses);\n  return (\n    <div>\n      {subjectCourses\n        .sort(\n          (a, b) => parseInt(a[1].deptCourseId) - parseInt(b[1].deptCourseId)\n        )\n        .map(([code, course], i) => (\n          <Course\n            handleClick={() => {\n              setActiveCourse(code);\n            }}\n            active={activeCourse === code}\n            schoolCode={schoolCode}\n            subjectCode={subjectCode}\n            key={code}\n            name={course.name}\n            deptCourseId={course.deptCourseId}\n            year={year}\n            season={season}\n            isOdd={i % 2 !== 0}\n          />\n        ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport React from \"react\";\nimport { IRequirement, LoadingState, Op } from \"./types\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./duck\";\nimport { fixCourseName } from \"./utils\";\n\ninterface Props {\n  year: string;\n  season: string;\n  subjectCode: string;\n  schoolCode: string;\n  requirements: IRequirement;\n}\n\nconst styles = {\n  reqBlock: {\n    padding: \"10px 0px 10px 0px\"\n  }\n};\n\nconst MajorRequirements: React.FC<Props> = ({\n  requirements,\n  year,\n  season,\n  subjectCode,\n  schoolCode\n}) => {\n  const courses = useSelector(\n    (state: RootState) =>\n      state.core.courses.entities[\n        `${year}-${season}-${subjectCode}-${schoolCode}`\n      ]\n  );\n  const loadingState = useSelector(\n    (state: RootState) => state.core.courses.loadingState\n  );\n  if (loadingState === LoadingState.Loading) {\n    return null;\n  }\n  function stringToCourse(str: string) {\n    const [subjectCode, schoolCode, deptCourseId] = str.split(\"-\");\n    return (\n      <Link\n        to={`/${year}/${season}/${schoolCode}/${subjectCode}/${deptCourseId}`}\n        css={{ padding: \"5px\" }}\n      >\n        {fixCourseName(courses[deptCourseId].name)}\n      </Link>\n    );\n  }\n  function displayRequirements(req: IRequirement) {\n    const argsComponents = req.args.flatMap(arg =>\n      typeof arg === \"string\" ? [stringToCourse(arg)] : displayRequirements(arg)\n    );\n    if (req.op === Op.And) {\n      return <div css={styles.reqBlock}> ALL of: {argsComponents} </div>;\n    }\n    if (req.op === Op.Or) {\n      return (\n        <div css={styles.reqBlock}> AT LEAST ONE of: {argsComponents} </div>\n      );\n    }\n    if (req.op === Op.Choose) {\n      return (\n        <div css={styles.reqBlock}>\n          {\" \"}\n          AT LEAST {req.num} of: {argsComponents}{\" \"}\n        </div>\n      );\n    }\n  }\n  return (\n    <div>\n      <h3> Major Requirements </h3>\n      <div css={{ padding: \"0px 20px 0px 20px\" }}>\n        {displayRequirements(requirements)}\n      </div>\n    </div>\n  );\n};\n\nexport default MajorRequirements;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fixSubjectName } from \"./utils\";\nimport { SubjectCourseList } from \"./SubjectCourseList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSubjects, RootState } from \"./duck\";\nimport { LoadingState } from \"./types\";\nimport View from \"./View\";\nimport { requirements } from \"./constants\";\nimport MajorRequirements from \"./MajorRequirements\";\n\ninterface Props {\n  subjectCode: string;\n  schoolCode: string;\n  year: string;\n  season: string;\n  shouldDisplayBack: boolean;\n}\n\nconst SubjectView: React.FC<Props> = ({\n  subjectCode,\n  schoolCode,\n  year,\n  season,\n  shouldDisplayBack\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getSubjects(schoolCode));\n  }, [dispatch, schoolCode]);\n  const loadingState = useSelector(\n    (state: RootState) => state.core.subjects.loadingState\n  );\n  const error = useSelector((state: RootState) => state.core.subjects.error);\n  const subject = useSelector(\n    (state: RootState) =>\n      state.core.subjects?.entities[schoolCode!]?.[subjectCode!]\n  );\n  if (subject === undefined) {\n    return (\n      <View>\n        <h2> Loading...</h2>\n      </View>\n    );\n  }\n  if (loadingState === LoadingState.Failed) {\n    return <div css={{ color: \"red\" }}> {error} </div>;\n  }\n\n  const majorReqsKey = `${year}-${season}-${subjectCode}`.toLowerCase();\n\n  return (\n    <View>\n      {shouldDisplayBack && (\n        <Link to={`/${year}/${season}/${schoolCode}`}>\n          &#8592; Switch subject\n        </Link>\n      )}\n      <h2> {fixSubjectName(subject.name, subjectCode)} </h2>\n      {majorReqsKey in requirements && (\n        <MajorRequirements\n          year={year}\n          season={season}\n          subjectCode={subjectCode}\n          schoolCode={schoolCode}\n          requirements={requirements[majorReqsKey]}\n        />\n      )}\n      <header>\n        <h3> Courses </h3>\n      </header>\n      <SubjectCourseList\n        year={year}\n        season={season}\n        subjectCode={subjectCode}\n        schoolCode={schoolCode}\n      />\n    </View>\n  );\n};\n\nexport default SubjectView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { IMeeting, ISection } from \"./types\";\nimport { fixLocation, fixCredit } from \"./utils\";\n\ninterface Props {\n  type: string;\n  instructors: Array<string>;\n  status: string;\n  meetings: Array<IMeeting>;\n  location: string;\n  name: string;\n  notes: string;\n  recitations: Array<ISection> | null;\n  minUnits: number;\n  maxUnits: number;\n  isOdd: boolean;\n}\n\nfunction getStatusColor(status: string): string {\n  switch (status) {\n    case \"WaitList\":\n      return \"orange\";\n    case \"Open\":\n      return \"green\";\n    case \"Closed\":\n      return \"red\";\n    default:\n      return \"black\";\n  }\n}\n\nconst styles = {\n  Section: (isOdd: boolean) =>\n    ({\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: isOdd ? \"#dfdfdf\" : \"#efefef\"\n    } as const),\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    flexWrap: \"wrap\",\n    wordWrap: \"break-word\",\n    padding: \"10px\",\n    \"@media(max-width: 700px)\": {\n      flexDirection: \"column\",\n      paddingLeft: \"30px\"\n    }\n  },\n  status: (status: string) => ({\n    margin: \"20px\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    backgroundColor: getStatusColor(status)\n  })\n} as const;\n\nconst Section: React.FC<Props> = ({\n  type,\n  instructors,\n  status,\n  meetings,\n  location,\n  name,\n  minUnits,\n  maxUnits,\n  isOdd\n}) => {\n  const meetingDateTimes = [];\n  const meetingDays: string[] = [];\n  const meetingTimes: string[] = [];\n  meetings?.forEach(m => {\n    const dateTime = moment.utc(m.beginDate);\n    meetingDateTimes.push(dateTime);\n    meetingDays.push(dateTime.format(\"ddd\"));\n    const endTime = dateTime.clone().add(m.minutesDuration, \"minutes\");\n    meetingTimes.push(\n      `${dateTime.format(\"h:mm A\")}-${endTime.format(\"h:mm A\")}`\n    );\n  });\n  return (\n    <div css={styles.Section(isOdd)}>\n      <div css={styles.row}>\n        <div css={styles.status(status)} />\n        {name && (\n          <div\n            css={{\n              width: \"100px\",\n              padding: \"5px\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}\n          >\n            {name}\n          </div>\n        )}\n        <div\n          css={{\n            display: \"flex\",\n            width: \"100px\",\n            flexDirection: \"column\",\n            padding: \"5px\"\n          }}\n        >\n          <div> {instructors.join(\", \")} </div>\n        </div>\n        <div\n          css={{\n            display: \"flex\",\n            width: \"80px\",\n            flexDirection: \"column\",\n            padding: \"5px\"\n          }}\n        >\n          <div> {type} </div>\n        </div>\n        <div css={{ width: \"20px\", maxWidth: \"50vw\", padding: \"5px\" }}>\n          {\" \"}\n          {fixCredit(minUnits, maxUnits)}\n        </div>\n        <div css={{ width: \"150px\", maxWidth: \"40vw\", padding: \"5px\" }}>\n          {\" \"}\n          {fixLocation(location)}{\" \"}\n        </div>\n        <div css={{ width: \"50px\", padding: \"5px\" }}>\n          {meetingDays.join(\"\\t\")}{\" \"}\n        </div>\n        <div\n          css={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100px\",\n            padding: \"5px\"\n          }}\n        >\n          {meetingTimes.map((time, i) => (\n            <div key={i}> {time} </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Section;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport Section from \"./Section\";\nimport { ISection } from \"./types\";\n\ninterface Props {\n  sections: Array<ISection> | null;\n  displayDescription: boolean;\n  displayNotes: boolean;\n}\n\nconst SectionsList: React.FC<Props> = ({\n  sections,\n  displayDescription,\n  displayNotes\n}) => {\n  if (!sections) {\n    return <div></div>;\n  }\n  return (\n    <div>\n      {sections.map((section, i) => (\n        <div css={{ padding: \"10px\" }} key={section.registrationNumber}>\n          <Section isOdd={!!(i % 2)} {...section} />\n          {section.recitations && (\n            <SectionsList\n              sections={section.recitations}\n              displayDescription={false}\n              displayNotes={false}\n            />\n          )}\n          {displayDescription && (\n            <p>{section.description || \"No description available\"}</p>\n          )}\n          {displayNotes && <p> {section.notes}</p>}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SectionsList;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React, { useEffect } from \"react\";\nimport { getCourses, RootState } from \"./duck\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SectionsList from \"./SectionsList\";\nimport { LoadingState } from \"./types\";\nimport { fixCourseName } from \"./utils\";\nimport View from \"./View\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  subjectCode: string;\n  schoolCode: string;\n  courseCode: string;\n  year: string;\n  season: string;\n  shouldDisplayBack?: boolean;\n}\n\nconst CourseView: React.FC<Props> = ({\n  subjectCode,\n  schoolCode,\n  courseCode,\n  year,\n  season,\n  shouldDisplayBack\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCourses(year!, season!, schoolCode!, subjectCode!));\n  }, [subjectCode, schoolCode, season, year, dispatch]);\n  const course = useSelector(\n    (state: RootState) =>\n      state.core.courses.entities[\n        `${year}-${season}-${subjectCode}-${schoolCode}`\n      ]?.[courseCode!]\n  );\n  const loadingState = useSelector(\n    (state: RootState) => state.core.courses.loadingState\n  );\n  const error = useSelector((state: RootState) => state.core.courses.error);\n  if (course === undefined) {\n    return (\n      <View>\n        <h2> Loading...</h2>\n      </View>\n    );\n  }\n  if (loadingState === LoadingState.Failed) {\n    return <View css={{ color: \"red\" }}> {error} </View>;\n  }\n  const allDescriptionsEqual = course.sections.every(\n    section => section.description === course.sections[0].description\n  );\n  const allNotesEqual = course.sections.every(\n    section => section.notes === course.sections[0].notes\n  );\n  return (\n    <View>\n      <div\n        css={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        {shouldDisplayBack && (\n          <Link to={`/${year}/${season}/${schoolCode}`}>\n            &#8592; Switch course\n          </Link>\n        )}\n        <h1>{fixCourseName(course.name)} </h1>\n        {allDescriptionsEqual && <p>{course.sections[0].description}</p>}\n        <h2> Sections </h2>\n        <SectionsList\n          sections={course.sections}\n          displayDescription={!allDescriptionsEqual}\n          displayNotes={!allNotesEqual}\n        />\n      </div>\n    </View>\n  );\n};\n\nexport default CourseView;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { ReactNodeArray } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SemesterView from \"./SemesterView\";\nimport SchoolView from \"./SchoolView\";\nimport SubjectView from \"./SubjectView\";\nimport CourseView from \"./CourseView\";\n\nconst styles = {\n  MainPage: {\n    display: \"flex\"\n  }\n} as const;\n\nconst MainPage = () => {\n  const { subjectCode, schoolCode, courseCode, year, season } = useParams();\n  let views: ReactNodeArray = [];\n  // There's probably a way more intelligent way of doing this but basically\n  // we're going down the list of params and depending on which are undefined,\n  // we pick the most specific views we can display\n  if (year !== undefined && season !== undefined) {\n    if (schoolCode !== undefined) {\n      if (subjectCode !== undefined) {\n        if (courseCode !== undefined) {\n          views = [\n            <SubjectView\n              key={2}\n              shouldDisplayBack={true}\n              year={year}\n              season={season}\n              schoolCode={schoolCode}\n              subjectCode={subjectCode}\n            />,\n            <CourseView\n              key={3}\n              year={year}\n              season={season}\n              schoolCode={schoolCode}\n              subjectCode={subjectCode}\n              courseCode={courseCode}\n            />\n          ];\n        } else {\n          views = [\n            <SchoolView\n              key={1}\n              shouldDisplayBack={true}\n              year={year}\n              season={season}\n              schoolCode={schoolCode}\n            />,\n            <SubjectView\n              key={2}\n              shouldDisplayBack={false}\n              subjectCode={subjectCode}\n              schoolCode={schoolCode}\n              year={year}\n              season={season}\n            />\n          ];\n        }\n      } else {\n        views = [\n          <SemesterView key={0} year={year} season={season} />,\n          <SchoolView\n            key={1}\n            shouldDisplayBack={false}\n            schoolCode={schoolCode}\n            year={year}\n            season={season}\n          />\n        ];\n      }\n    } else {\n      views = [<SemesterView key={0} year={year} season={season} />];\n    }\n  }\n  return <div css={styles.MainPage}>{views}</div>;\n};\n\nexport default MainPage;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport SemesterView from \"./SemesterView\";\nimport SchoolView from \"./SchoolView\";\nimport SubjectView from \"./SubjectView\";\nimport CourseView from \"./CourseView\";\nimport View from \"./View\";\n\nconst styles = {\n  MobileMainPage: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n} as const;\n\nconst MobileMainPage = () => {\n  const { subjectCode, schoolCode, courseCode, year, season } = useParams();\n  const history = useHistory();\n  let view = <SemesterView year={year!} season={season!} />;\n  if (year === undefined || season === undefined) {\n    history.push(\"/\");\n    return (\n      <View>\n        {\" \"}\n        Invalid path, <Link to=\"/\"> go back </Link>{\" \"}\n      </View>\n    );\n  }\n  // There's probably a way more intelligent way of doing this but basically\n  // we're going down the list of params and depending on which are undefined,\n  // we pick the most specific views we can display\n  if (schoolCode !== undefined) {\n    if (subjectCode !== undefined) {\n      if (courseCode !== undefined) {\n        view = (\n          <CourseView\n            key={3}\n            shouldDisplayBack={true}\n            year={year}\n            season={season}\n            schoolCode={schoolCode}\n            subjectCode={subjectCode}\n            courseCode={courseCode}\n          />\n        );\n      } else {\n        view = (\n          <SubjectView\n            key={2}\n            shouldDisplayBack={true}\n            subjectCode={subjectCode}\n            schoolCode={schoolCode}\n            year={year!}\n            season={season!}\n          />\n        );\n      }\n    } else {\n      view = (\n        <SchoolView\n          key={1}\n          shouldDisplayBack={true}\n          schoolCode={schoolCode}\n          year={year}\n          season={season}\n        />\n      );\n    }\n  } else {\n    view = <SemesterView key={0} year={year} season={season} />;\n  }\n  return <div css={styles.MobileMainPage}>{view}</div>;\n};\n\nexport default MobileMainPage;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\nimport MainPage from \"./MainPage\";\nimport MobileMainPage from \"./MobileMainPage\";\nimport { useWindowWidth } from \"@react-hook/window-size/dist/es\";\n\nconst styles = {\n  App: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100vw\"\n  },\n  content: {\n    width: \"90vw\"\n  }\n} as const;\n\nconst App: React.FC = () => {\n  const width = useWindowWidth();\n  return (\n    <div css={styles.App}>\n      <Router>\n        <div css={styles.content}>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/:year/:season\">\n              <Link\n                css={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                  \"&:hover\": {\n                    textDecoration: \"underline\"\n                  }\n                }}\n                to=\"/\"\n              >\n                <h1> Courses </h1>\n              </Link>\n              <Route path=\"/:year/:season/:schoolCode?/:subjectCode?/:courseCode?\">\n                {width > 700 ? <MainPage /> : <MobileMainPage />}\n              </Route>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"intl-list-format\";\nimport \"intl-list-format/locale-data/en\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./duck\";\n\nconst render = () => {\n  const App = require(\"./App\").default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\n//@ts-ignore\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  //@ts-ignore\n  module.hot.accept(\"./App\", render);\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n  Constant for API_URL, course and subject names,\n  handling odd data\n*/\n\nimport { IRequirement, Op } from \"./types\";\n\nexport const API_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://schedge.a1liu.com\"\n    : \"https://schedge.a1liu.com\";\n\nexport const weirdCourseNames: { [s: string]: string } = {\n  \"Intro to Computer SCI\": \"Intro to Computer Science\",\n  \"Computer Systems Org\": \"Computer Systems Organization\",\n  \"Topics of General Interest:\":\n    \"Topics of General Interest: Drawing on the Web\",\n  \"Spec Tpcs in Prog Lang:\": \"Special Topics in Programming Languages\",\n  \"Quantitative Reasoning: Prob,Stats & Decisn-Mkng\":\n    \"Quantitative Reasoning: Probability, Statistics & Decision-Making\",\n  \"Expressive Culture: Tpcs\": \"Expressive Culture: Topics\",\n  \"Expressive Cult: Images\": \"Expressive Culture: Images\",\n  \"Honors Analy of Algo\": \"Honors Analysis of Algorithms\",\n  \"Sp Tpcs Modern Art:\": \"Special Topics Modern Art:\",\n  \"Hist of City Planning, 19th & 20th Centuries\":\n    \"History of City Planning: 19th & 20th Centuries\",\n  \"Topics in AS:\": \"Topics in Animal Studies\",\n  \"Dutch &Flemish Painting, 1600-1700\": \"Dutch & Flemish Painting, 1600-1700\",\n  \"East Asian Art II:China, Korea, Japan, 1000Ce-Pr\":\n    \"East Asian Art II: China, Korea, Japan, 1000Ce-Pr\",\n  \"From Huck Finn to Columbine:Understanding Disruptive Behaviors in Chldrn & Adolscnt\":\n    \"From Huck Finn to Columbine: Understanding Disruptive Behaviors in Children & Adolescents\",\n  TrendingMentalHealth: \"Trending Mental Health\",\n  \"Adv Sem: Autism Spectrum Disorders\":\n    \"Advanced Seminar: Autism Spectrum Disorders\",\n  \"Elemen French Level I\": \"Elementary French Level I\",\n  \"Elem French Level II\": \"Elementary French Level II\",\n  \"Spec Top Computer SCI:\": \"Special Topics\",\n  \"Honors Programming Lang\": \"Honors Programming Languages\",\n  \"Master'S Thesis Research\": \"Master's Thesis Research\",\n  \"Risk & Portfolio Mngmnt With Econometrics\":\n    \"Risk & Portfolio Management With Econometrics\",\n  \"Prob & Meth in Mideast Studies\":\n    \"Problems & Methods in Middle Eastern Studies\",\n  \"Prob & Meth in Hebrew & Judaic Studies\":\n    \"Problems & Methods in Hebrew & Judaic Studies\",\n  \"Prin of Financial Acctg\": \"Principals of Financial Accounting\"\n};\n\nexport const weirdSubjectNames: { [s: string]: string } = {\n  \"Child/Adoles Mental Hlth Stds\": \"Child/Adolescent Mental Health Studies\",\n  \"European and Mediterranean Stu\": \"European and Mediterranean Studies\",\n  \"Latin Amer-Caribbean Studies\": \"Latin American-Caribbean Studies\",\n  \"Ctr for Art, Society & Pub Pol\": \"Center for Art, Society & Public Policy\",\n  \"Ctr for Experiment Humanities\": \"Center for Experimental Humanities\"\n};\n\nexport const internationalSubjects: { [s: string]: string } = {\n  ICINE: \"Cinema Studies (International)\",\n  IFMTV: \"Film & TV (International)\",\n  IPHTI: \"Photography and Imaging (International)\",\n  ITHEA: \"Drama (International)\",\n  ISPEC: \"TSOA Special Programs (International)\"\n};\n\nexport const STOPS_COUNT = 6;\n\nexport const seasons = {\n  sp: \"Spring\",\n  fa: \"Fall\"\n};\n\nexport const requirements: { [code: string]: IRequirement } = {\n  \"2020-fa-csci\": {\n    op: Op.And,\n    args: [\n      \"csci-ua-101\",\n      \"csci-ua-102\",\n      \"csci-ua-201\",\n      \"csci-ua-202\",\n      \"csci-ua-310\",\n      {\n        op: Op.Choose,\n        num: 5,\n        args: [\"csci-ua-472\", \"csci-ua-473\", \"csci-ua-480\"]\n      }\n    ]\n  },\n  \"2020-sp-csci\": {\n    op: Op.And,\n    args: [\n      \"csci-ua-101\",\n      \"csci-ua-102\",\n      \"csci-ua-201\",\n      \"csci-ua-202\",\n      \"csci-ua-310\",\n      {\n        op: Op.Choose,\n        num: 5,\n        args: [\n          \"csci-ua-473\",\n          \"csci-ua-476\",\n          \"csci-ua-479\",\n          \"csci-ua-480\",\n          \"csci-ua-490\"\n        ]\n      }\n    ]\n  }\n};\n","import {\n  Action,\n  combineReducers,\n  configureStore,\n  createSlice,\n  PayloadAction\n} from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { ICourse, LoadingState } from \"./types\";\nimport { API_URL } from \"./constants\";\n\n// Hot Loading setup\n//@ts-ignore\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  //@ts-ignore\n  module.hot.accept(\"./duck\", () => {\n    const newRootReducer = require(\"./duck\").rootReducer;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\ninterface Entity<T> {\n  loadingState: LoadingState;\n  entities: T;\n  error: string | undefined;\n}\n\ninterface CoreState {\n  schools: Entity<{ [schoolCode: string]: { [s: string]: string } }>;\n  courses: Entity<{\n    [subjectCode: string]: { [deptCourseId: string]: ICourse };\n  }>;\n  subjects: Entity<{ [s: string]: { [s: string]: { [s: string]: string } } }>;\n}\n\nconst initialEntity = {\n  loadingState: LoadingState.Loading,\n  entities: {},\n  error: undefined\n};\n\nconst initialState: CoreState = {\n  schools: { ...initialEntity },\n  courses: { ...initialEntity },\n  subjects: { ...initialEntity }\n};\n\ninterface GetSubjectPayload {\n  subjects: {\n    [schoolCode: string]: { [subjectCode: string]: { [s: string]: string } };\n  };\n  code: string;\n}\n\ninterface GetCoursesPayload {\n  courses: { [s: string]: ICourse };\n  year: string;\n  season: string;\n  schoolCode: string;\n  subjectCode: string;\n}\n\nconst coreSlice = createSlice({\n  name: \"core\",\n  initialState,\n  reducers: {\n    getSchoolsSuccess(\n      state,\n      action: PayloadAction<{ [s: string]: { [s: string]: string } }>\n    ) {\n      console.log(\"ACTION\");\n      console.log(action);\n      state.schools.loadingState = LoadingState.Success;\n      state.schools.entities = action.payload;\n    },\n    getSchoolsFailure(state, action: PayloadAction<string>) {\n      state.schools.error = action.payload;\n    },\n    getSubjectsPending(state) {\n      state.subjects.loadingState = LoadingState.Loading;\n    },\n    getSubjectsSuccess(state, action: PayloadAction<GetSubjectPayload>) {\n      state.subjects.entities = action.payload.subjects;\n      state.subjects.loadingState = LoadingState.Success;\n    },\n    getSubjectsFailure(state, action: PayloadAction<string>) {\n      state.subjects.loadingState = LoadingState.Failed;\n      state.subjects.error = action.payload;\n    },\n    getCoursesPending(state) {\n      state.courses.loadingState = LoadingState.Loading;\n    },\n    getCoursesSuccess(state, action: PayloadAction<GetCoursesPayload>) {\n      const { year, season, schoolCode, subjectCode, courses } = action.payload;\n      state.courses.entities[\n        `${year}-${season}-${subjectCode}-${schoolCode}`\n      ] = courses;\n      state.courses.loadingState = LoadingState.Success;\n    },\n    getCoursesFailure(state, action: PayloadAction<string>) {\n      state.courses.loadingState = LoadingState.Failed;\n      state.courses.error = action.payload;\n    },\n    startLoading(\n      state,\n      action: PayloadAction<\"courses\" | \"subjects\" | \"schools\">\n    ) {\n      state[action.payload].loadingState = LoadingState.Loading;\n    },\n    finishLoading(\n      state,\n      action: PayloadAction<\"courses\" | \"subjects\" | \"schools\">\n    ) {\n      state[action.payload].loadingState = LoadingState.Success;\n    }\n  }\n});\n\nconst {\n  getSchoolsSuccess,\n  getSchoolsFailure,\n  getSubjectsPending,\n  getSubjectsSuccess,\n  getSubjectsFailure,\n  getCoursesPending,\n  getCoursesSuccess,\n  getCoursesFailure,\n  finishLoading\n} = coreSlice.actions;\n\nexport const getSchools = (): AppThunk => async (dispatch, getState) => {\n  const {\n    core: { schools }\n  } = getState();\n  if (Object.entries(schools.entities).length === 0) {\n    try {\n      const res = await fetch(`${API_URL}/schools`);\n      const schools = await res.json();\n      dispatch(getSchoolsSuccess(schools));\n    } catch (e) {\n      dispatch(getSchoolsFailure(e.toString()));\n    }\n  } else {\n    dispatch(finishLoading(\"schools\"));\n  }\n};\n\nexport const getSubjects = (code: string | undefined): AppThunk => async (\n  dispatch,\n  getState\n) => {\n  if (code === undefined) {\n    dispatch(getSubjectsFailure(\"Did not provide valid school code\"));\n    return;\n  }\n  const {\n    core: { subjects }\n  } = getState();\n  if (!(code in subjects.entities)) {\n    try {\n      dispatch(getSubjectsPending());\n      const res = await fetch(`${API_URL}/subjects?school=${code}`);\n      const subjects = await res.json();\n      dispatch(getSubjectsSuccess({ subjects, code }));\n    } catch (err) {\n      dispatch(getSubjectsFailure(err.toString()));\n    }\n  } else {\n    dispatch(finishLoading(\"subjects\"));\n  }\n};\n\nexport const getCourses = (\n  year: string,\n  season: string,\n  schoolCode: string,\n  subjectCode: string\n): AppThunk => async (dispatch, getState) => {\n  const {\n    core: { courses }\n  } = getState();\n  if (\n    courses.entities[`${year}-${season}-${subjectCode}-${schoolCode}`] ===\n    undefined\n  ) {\n    try {\n      dispatch(getCoursesPending());\n      const res = await fetch(\n        `${API_URL}/${year}/${season}/${schoolCode}/${subjectCode}?full=true`\n      );\n      const requestPayload = await res.json();\n      const courses: { [s: string]: ICourse } = {};\n      for (const course of requestPayload) {\n        courses[course.deptCourseId] = course;\n      }\n      const payload = { subjectCode, schoolCode, year, season, courses };\n      dispatch(getCoursesSuccess(payload));\n    } catch (err) {\n      dispatch(getCoursesFailure(err.toString()));\n    }\n  }\n};\n\nexport { finishLoading };\n\nexport const rootReducer = combineReducers({\n  core: coreSlice.reducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const store = configureStore({\n  reducer: rootReducer\n});\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n"],"sourceRoot":""}